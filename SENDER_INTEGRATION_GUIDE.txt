═══════════════════════════════════════════════════════════════════
  BULK SMS API - INTEGRATION GUIDE FOR SENDERS
  Your Complete Guide to Using Our CRM Services
═══════════════════════════════════════════════════════════════════

WELCOME!

You have been given access to our Bulk SMS & CRM API platform.
This guide will help you integrate messaging into your application.

═══════════════════════════════════════════════════════════════════
STEP 1: YOUR API CREDENTIALS
═══════════════════════════════════════════════════════════════════

API Key: [YOUR_API_KEY_HERE]
Client ID: [YOUR_CLIENT_ID]
Base URL: http://crm.pradytecai.com/api/[YOUR_CLIENT_ID]

⚠️ IMPORTANT: Keep your API Key secret! Never expose it in frontend code.

═══════════════════════════════════════════════════════════════════
STEP 2: VIEW API DOCUMENTATION
═══════════════════════════════════════════════════════════════════

Visit: http://crm.pradytecai.com/api-documentation

You will find:
- Complete endpoint list
- Code examples (PHP, Python, Node.js, cURL)
- Request/response formats
- Error codes
- Integration examples

═══════════════════════════════════════════════════════════════════
STEP 3: QUICK START - SEND YOUR FIRST SMS
═══════════════════════════════════════════════════════════════════

USING PHP:

<?php
$ch = curl_init('http://crm.pradytecai.com/api/[CLIENT_ID]/sms/send');
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch, CURLOPT_POST, true);
curl_setopt($ch, CURLOPT_HTTPHEADER, [
    'X-API-Key: [YOUR_API_KEY]',
    'Content-Type: application/json'
]);
curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode([
    'recipient' => '254712345678',
    'message' => 'Test message from my system',
    'sender' => '[YOUR_SENDER_ID]'
]));

$response = curl_exec($ch);
$result = json_decode($response, true);
curl_close($ch);

if ($result['status'] == 'sent') {
    echo "SMS sent! Message ID: " . $result['message_id'];
}
?>

USING cURL (Command Line):

curl -X POST http://crm.pradytecai.com/api/[CLIENT_ID]/sms/send \
  -H "X-API-Key: [YOUR_API_KEY]" \
  -H "Content-Type: application/json" \
  -d '{
    "recipient": "254712345678",
    "message": "Hello from our system",
    "sender": "[YOUR_SENDER_ID]"
  }'

═══════════════════════════════════════════════════════════════════
STEP 4: CHECK YOUR BALANCE
═══════════════════════════════════════════════════════════════════

GET http://crm.pradytecai.com/api/[CLIENT_ID]/client/balance
Header: X-API-Key: [YOUR_API_KEY]

Response:
{
  "balance": 1000.00,
  "currency": "KES",
  "units": 1000,
  "price_per_unit": 1.00
}

You can display this in your dashboard to show available SMS credits.

═══════════════════════════════════════════════════════════════════
STEP 5: TOP-UP YOUR BALANCE VIA M-PESA
═══════════════════════════════════════════════════════════════════

POST http://crm.pradytecai.com/api/[CLIENT_ID]/wallet/topup
Headers:
  X-API-Key: [YOUR_API_KEY]
  Content-Type: application/json

Body:
{
  "amount": 1000,
  "payment_method": "mpesa",
  "phone_number": "254712345678"
}

Response:
{
  "status": "pending",
  "message": "Check phone for M-Pesa prompt",
  "transaction_id": "TXN-20251009-001"
}

What happens:
1. M-Pesa STK Push sent to the phone number
2. User enters PIN and confirms
3. Payment processed automatically
4. Your balance updated instantly
5. You receive webhook notification (if configured)

═══════════════════════════════════════════════════════════════════
STEP 6: MANAGE CONTACTS (CRM FEATURE)
═══════════════════════════════════════════════════════════════════

ADD SINGLE CONTACT:

POST http://crm.pradytecai.com/api/[CLIENT_ID]/contacts
{
  "name": "John Doe",
  "phone": "254712345678",
  "email": "john@example.com",
  "department": "Sales"
}

LIST ALL CONTACTS:

GET http://crm.pradytecai.com/api/[CLIENT_ID]/contacts

IMPORT CONTACTS FROM CSV:

POST http://crm.pradytecai.com/api/[CLIENT_ID]/contacts/bulk-import
Form Data: file=contacts.csv

CSV Format:
Name,Phone,Email,Department
John Doe,254712345678,john@example.com,Sales
Jane Smith,254723456789,jane@example.com,Marketing

═══════════════════════════════════════════════════════════════════
STEP 7: SEND BULK MESSAGES (CAMPAIGNS)
═══════════════════════════════════════════════════════════════════

CREATE CAMPAIGN:

POST http://crm.pradytecai.com/api/[CLIENT_ID]/campaigns
{
  "name": "Monthly Newsletter",
  "message": "Dear customer, check our new offers!",
  "sender": "[YOUR_SENDER_ID]",
  "recipients": ["254712345678", "254723456789", "254734567890"]
}

SEND CAMPAIGN:

POST http://crm.pradytecai.com/api/[CLIENT_ID]/campaigns/{campaign_id}/send

The system will automatically send to all recipients in the campaign.

═══════════════════════════════════════════════════════════════════
STEP 8: VIEW ANALYTICS & REPORTS
═══════════════════════════════════════════════════════════════════

GET SUMMARY:

GET http://crm.pradytecai.com/api/[CLIENT_ID]/analytics/summary

Returns:
{
  "today": {
    "messages_sent": 45,
    "messages_delivered": 43,
    "cost": 45.00
  },
  "this_month": {
    "messages_sent": 890,
    "cost": 890.00
  },
  "all_time": {
    "total_messages": 15000,
    "total_spent": 15000.00
  }
}

GET DAILY BREAKDOWN:

GET http://crm.pradytecai.com/api/[CLIENT_ID]/analytics/daily?from=2025-10-01&to=2025-10-09

EXPORT TRANSACTIONS TO CSV:

GET http://crm.pradytecai.com/api/[CLIENT_ID]/wallet/transactions/export

Downloads a CSV file with all your top-ups and usage.

═══════════════════════════════════════════════════════════════════
STEP 9: CONFIGURE WEBHOOKS (OPTIONAL BUT RECOMMENDED)
═══════════════════════════════════════════════════════════════════

Webhooks allow our system to notify your system in real-time when:
- Balance is updated (after top-up)
- Message is delivered
- Top-up is completed or failed

CREATE WEBHOOK ENDPOINT in your system:

https://your-system.com/webhook/sms-notifications

Example PHP Code:

<?php
// Verify webhook signature
$signature = $_SERVER['HTTP_X_WEBHOOK_SIGNATURE'];
$payload = file_get_contents('php://input');
$secret = '[YOUR_WEBHOOK_SECRET]';

$expectedSignature = hash_hmac('sha256', $payload, $secret);

if (hash_equals($expectedSignature, $signature)) {
    $data = json_decode($payload, true);
    
    if ($data['event'] === 'balance.updated') {
        // Update balance in your system
        updateSmsBalance($data['data']['new_balance']);
    }
    
    http_response_code(200);
    echo 'OK';
} else {
    http_response_code(401);
    echo 'Invalid signature';
}
?>

THEN contact us to configure:
- Webhook URL: https://your-system.com/webhook/sms-notifications
- Webhook Secret: [Generate random string]
- Events: balance.updated, topup.completed, message.delivered

═══════════════════════════════════════════════════════════════════
STEP 10: INTEGRATION EXAMPLES FOR COMMON USE CASES
═══════════════════════════════════════════════════════════════════

EXAMPLE 1: Send Appointment Reminder

When appointment is booked in your system:

$smsApi->sendSMS(
    $patient->phone,
    "Appointment reminder: {$date} at {time} - {$hospital_name}"
);

EXAMPLE 2: Send Payment Confirmation

When payment is received:

$smsApi->sendSMS(
    $customer->phone,
    "Payment of KES {$amount} received. Receipt: {$receipt_no}"
);

EXAMPLE 3: Send Bulk Promotional SMS

Monthly promotions to all customers:

$campaign = $smsApi->createCampaign([
    'name' => 'October Promotion',
    'message' => 'Get 20% off all services this month!',
    'recipients' => $allCustomerPhones // Array of phone numbers
]);

$smsApi->sendCampaign($campaign['id']);

EXAMPLE 4: Display Balance Widget

In your admin dashboard:

$balance = $smsApi->getBalance();
echo "<div class='sms-balance'>";
echo "  SMS Credits: KES " . number_format($balance['balance'], 2);
echo "  Available SMS: " . number_format($balance['units'], 0);
echo "  <button onclick='topUp()'>Top Up</button>";
echo "</div>";

EXAMPLE 5: Auto Top-up When Low

Check balance before sending:

$balance = $smsApi->getBalance();

if ($balance['balance'] < 100) {
    // Auto top-up
    $topup = $smsApi->topUp(1000, '254712345678');
    alert('Low balance! Top-up initiated. Check phone for M-Pesa prompt.');
}

═══════════════════════════════════════════════════════════════════
COMPLETE API ENDPOINTS REFERENCE
═══════════════════════════════════════════════════════════════════

MESSAGING:
  POST   /api/{id}/sms/send                - Send single SMS
  GET    /api/{id}/sms/status/{msg_id}     - Check delivery status
  GET    /api/{id}/sms/history             - Message history
  POST   /api/{id}/messages/send           - Send WhatsApp

CONTACTS (CRM):
  GET    /api/{id}/contacts                - List contacts
  POST   /api/{id}/contacts                - Add contact
  PUT    /api/{id}/contacts/{id}           - Update contact
  DELETE /api/{id}/contacts/{id}           - Delete contact
  POST   /api/{id}/contacts/bulk-import    - Import CSV

CAMPAIGNS (BULK):
  GET    /api/{id}/campaigns               - List campaigns
  POST   /api/{id}/campaigns               - Create campaign
  POST   /api/{id}/campaigns/{id}/send     - Send bulk

BALANCE & WALLET:
  GET    /api/{id}/client/balance          - Check balance
  POST   /api/{id}/wallet/topup            - Top-up via M-Pesa
  GET    /api/{id}/wallet/transactions     - Transaction history
  GET    /api/{id}/wallet/transactions/export - Export CSV

ANALYTICS:
  GET    /api/{id}/analytics/summary       - Overall statistics
  GET    /api/{id}/analytics/daily         - Daily breakdown
  GET    /api/{id}/analytics/monthly       - Monthly trends
  GET    /api/{id}/analytics/by-channel    - SMS vs WhatsApp stats

═══════════════════════════════════════════════════════════════════
AUTHENTICATION
═══════════════════════════════════════════════════════════════════

ALL requests must include:

Header: X-API-Key: [YOUR_API_KEY]

Example:
curl -H "X-API-Key: abc123xyz456..." http://...

═══════════════════════════════════════════════════════════════════
ERROR HANDLING
═══════════════════════════════════════════════════════════════════

Common Error Codes:

400 - Invalid request (missing parameters)
401 - Invalid API key
402 - Insufficient balance (top-up needed)
404 - Resource not found
429 - Rate limit exceeded (slow down)
500 - Server error (contact support)

Error Response Format:
{
  "status": "error",
  "error_code": "INSUFFICIENT_BALANCE",
  "message": "Your balance is too low. Current: KES 5.00"
}

═══════════════════════════════════════════════════════════════════
RATE LIMITS
═══════════════════════════════════════════════════════════════════

Your tier determines API request limits:

Bronze:   60 requests per minute
Silver:   120 requests per minute
Gold:     300 requests per minute
Platinum: 1000 requests per minute

Response headers show your limits:
X-RateLimit-Limit: 60
X-RateLimit-Remaining: 45
X-RateLimit-Reset: 1696860000

═══════════════════════════════════════════════════════════════════
PRICING & BILLING
═══════════════════════════════════════════════════════════════════

SMS Cost: KES 1.00 per SMS
WhatsApp: [Contact for pricing]

Minimum Top-up: KES 100
Maximum Top-up: KES 50,000 per transaction

Payment Methods:
- M-Pesa (instant, automated)
- Bank Transfer (contact support)
- Manual (contact support)

═══════════════════════════════════════════════════════════════════
BEST PRACTICES
═══════════════════════════════════════════════════════════════════

1. CHECK BALANCE before sending bulk messages
2. HANDLE ERRORS gracefully in your code
3. USE TEMPLATES for repeated messages
4. CONFIGURE WEBHOOKS for real-time updates
5. MONITOR YOUR USAGE via analytics
6. TOP-UP PROACTIVELY when balance is low
7. STORE API KEY securely (environment variables)
8. TEST in sandbox mode first (if available)

═══════════════════════════════════════════════════════════════════
INTEGRATION CHECKLIST
═══════════════════════════════════════════════════════════════════

[ ] Received API credentials
[ ] Visited API documentation
[ ] Tested sending single SMS
[ ] Tested balance check
[ ] Configured webhooks (optional)
[ ] Added top-up functionality
[ ] Imported contacts (if needed)
[ ] Tested bulk campaigns
[ ] Set up error handling
[ ] Ready for production!

═══════════════════════════════════════════════════════════════════
SUPPORT
═══════════════════════════════════════════════════════════════════

If you need help:

Email: support@yourplatform.com
Phone: +254 XXX XXX XXX
Hours: Monday - Friday, 8am - 6pm EAT

Common Questions:
- "How do I top-up?" → See STEP 5 above
- "My balance isn't updating" → Check webhooks or poll balance API
- "SMS not sending" → Check balance and API key
- "Rate limit exceeded" → Slow down requests or upgrade tier

═══════════════════════════════════════════════════════════════════
QUICK REFERENCE - MOST USED ENDPOINTS
═══════════════════════════════════════════════════════════════════

1. SEND SMS:
   POST /api/{id}/sms/send
   Body: {recipient, message, sender}

2. CHECK BALANCE:
   GET /api/{id}/client/balance

3. TOP-UP:
   POST /api/{id}/wallet/topup
   Body: {amount, payment_method: "mpesa", phone_number}

4. MESSAGE HISTORY:
   GET /api/{id}/sms/history

5. ANALYTICS:
   GET /api/{id}/analytics/summary

═══════════════════════════════════════════════════════════════════
SAMPLE PHP CLASS FOR YOUR PROJECT
═══════════════════════════════════════════════════════════════════

Save this as: app/Services/SmsApiClient.php

<?php

namespace App\Services;

class SmsApiClient {
    private $apiKey;
    private $clientId;
    private $baseUrl;
    
    public function __construct() {
        $this->apiKey = env('SMS_API_KEY'); // Store in .env
        $this->clientId = env('SMS_CLIENT_ID');
        $this->baseUrl = 'http://crm.pradytecai.com/api/' . $this->clientId;
    }
    
    public function sendSMS($recipient, $message, $sender = null) {
        $ch = curl_init($this->baseUrl . '/sms/send');
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($ch, CURLOPT_POST, true);
        curl_setopt($ch, CURLOPT_HTTPHEADER, [
            'X-API-Key: ' . $this->apiKey,
            'Content-Type: application/json'
        ]);
        curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode([
            'recipient' => $recipient,
            'message' => $message,
            'sender' => $sender ?? env('SMS_SENDER_ID')
        ]));
        
        $response = curl_exec($ch);
        curl_close($ch);
        
        return json_decode($response, true);
    }
    
    public function getBalance() {
        $ch = curl_init($this->baseUrl . '/client/balance');
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($ch, CURLOPT_HTTPHEADER, [
            'X-API-Key: ' . $this->apiKey
        ]);
        
        $response = curl_exec($ch);
        curl_close($ch);
        
        return json_decode($response, true);
    }
    
    public function topUp($amount, $phoneNumber) {
        $ch = curl_init($this->baseUrl . '/wallet/topup');
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($ch, CURLOPT_POST, true);
        curl_setopt($ch, CURLOPT_HTTPHEADER, [
            'X-API-Key: ' . $this->apiKey,
            'Content-Type: application/json'
        ]);
        curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode([
            'amount' => $amount,
            'payment_method' => 'mpesa',
            'phone_number' => $phoneNumber
        ]));
        
        $response = curl_exec($ch);
        curl_close($ch);
        
        return json_decode($response, true);
    }
    
    public function getAnalytics() {
        $ch = curl_init($this->baseUrl . '/analytics/summary');
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($ch, CURLOPT_HTTPHEADER, [
            'X-API-Key: ' . $this->apiKey
        ]);
        
        $response = curl_exec($ch);
        curl_close($ch);
        
        return json_decode($response, true);
    }
}
?>

USAGE IN THEIR APPLICATION:

<?php
use App\Services\SmsApiClient;

$sms = new SmsApiClient();

// Send SMS
$result = $sms->sendSMS('254712345678', 'Hello from our app');

// Check balance
$balance = $sms->getBalance();
echo "Balance: KES " . $balance['balance'];

// Top-up
$topup = $sms->topUp(1000, '254728883160');
echo "Top-up status: " . $topup['status'];

// Get analytics
$stats = $sms->getAnalytics();
echo "Messages today: " . $stats['today']['messages_sent'];
?>

═══════════════════════════════════════════════════════════════════
THEIR .ENV FILE (What They Add)
═══════════════════════════════════════════════════════════════════

They add to their .env:

SMS_API_KEY=[YOUR_API_KEY]
SMS_CLIENT_ID=[YOUR_CLIENT_ID]
SMS_SENDER_ID=[THEIR_SENDER_ID]
SMS_WEBHOOK_SECRET=[RANDOM_STRING]

═══════════════════════════════════════════════════════════════════
TESTING THEIR INTEGRATION
═══════════════════════════════════════════════════════════════════

STEP-BY-STEP TEST:

1. Send test SMS:
   - Use their test phone number
   - Verify SMS is received
   - Check message appears in history

2. Check balance:
   - Should show current balance
   - Display in their dashboard

3. Test top-up:
   - Small amount first (KES 100)
   - Verify M-Pesa prompt appears
   - Confirm balance updates

4. Test bulk send:
   - Create small campaign (5 recipients)
   - Verify all receive messages

5. View analytics:
   - Check today's stats
   - Verify numbers match

═══════════════════════════════════════════════════════════════════
TROUBLESHOOTING
═══════════════════════════════════════════════════════════════════

PROBLEM: "Invalid API Key"
SOLUTION: Check API key is correct, has no extra spaces

PROBLEM: "Insufficient Balance"
SOLUTION: Top-up via M-Pesa or contact support

PROBLEM: "Rate Limit Exceeded"
SOLUTION: Slow down requests, add delay between calls

PROBLEM: "Balance not updating after top-up"
SOLUTION: 
- Check phone entered PIN correctly
- Wait 1-2 minutes for callback
- Poll balance API if webhook not configured

PROBLEM: "Webhook not receiving"
SOLUTION:
- Verify webhook URL is accessible (public HTTPS)
- Check signature verification code
- Ensure webhook endpoint returns 200 OK

═══════════════════════════════════════════════════════════════════
SECURITY TIPS
═══════════════════════════════════════════════════════════════════

✓ Store API key in .env file, NOT in code
✓ Never expose API key in frontend JavaScript
✓ Use HTTPS for webhook endpoints
✓ Verify webhook signatures
✓ Rotate API key if compromised (contact support)
✓ Monitor unusual activity
✓ Set up IP whitelisting (contact support)

═══════════════════════════════════════════════════════════════════
GETTING STARTED TODAY
═══════════════════════════════════════════════════════════════════

IMMEDIATE NEXT STEPS:

1. Visit API documentation
2. Copy the PHP class above
3. Add to your project
4. Configure .env with API credentials
5. Test sending one SMS
6. Display balance in your dashboard
7. Add top-up button
8. Start using for your customers!

Estimated Integration Time: 1-2 hours

═══════════════════════════════════════════════════════════════════
NEED HELP?
═══════════════════════════════════════════════════════════════════

Contact us anytime:
- Email: support@yourplatform.com
- Phone: +254 XXX XXX XXX

We're here to help you integrate successfully!

═══════════════════════════════════════════════════════════════════
Document Version: 1.0
Last Updated: October 9, 2025
Your Account: [CLIENT_NAME] (Client ID: [CLIENT_ID])
═══════════════════════════════════════════════════════════════════


